{"version":3,"sources":["pages/About/AboutPage.jsx","pages/Home/HomePage.jsx","slices/searchDataSlice.js","components/search-bar/SearchBar.jsx","slices/githubReposSlice.js","utils/parser.js","pages/Projects/ProjectCard.jsx","pages/Projects/ProjectsPage.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["AboutPage","suggestions","HomePage","className","style","display","margin","children","springConfig","stiffness","damping","paddingTop","to","href","searchDataSlice","createSlice","name","initialState","data","filteredData","reducers","getFilterMethod","state","payload","filterMethod","getData","search","length","filter","toLowerCase","includes","selectFilteredData","actions","SearchBar","props","dispatch","useDispatch","useState","value","setValue","placeholder","onChange","e","targetValue","target","githubReposSlice","repos","hasErrors","errorMessage","loading","getRepos","getReposSucess","getReposFailure","fetchRepos","createAsyncThunk","_","thunkAPI","axios","get","then","res","console","log","catch","err","selectGithubReposValues","textCutter","text","cutTextAfterNb","appendText","slice","ProjectCard","repo","Content","onClick","full_name","numeral","stargazers_count","format","size","html_url","subtitle","description","moment","updated_at","fromNow","open_issues_count","forks_count","ProjectsPage","useSelector","useEffect","padding","color","message","Body","undefined","map","key","App","path","configureStore","reducer","githubReposReducer","searchDataReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc6636ea.chunk.js","sourcesContent":["import React from 'react';\n\nconst AboutPage = () => {\n  return (\n    <div>\n      \n    </div>\n  );\n};\n\nexport default AboutPage;","import React from \"react\";\nimport TextLoop from \"react-text-loop\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.scss\";\n\nconst suggestions = [\n  \"student\",\n  \"serious\",\n  \"backend\",\n  \"cloud\",\n  \"devops\",\n  \"passionate\"\n];\n\nconst HomePage = () => {\n  return (\n    <div className=\"home-background\" style={ { display: \"flex\" } }>\n      <div className=\"has-text-centered\" style={ { margin: \"auto \" } }>\n        <div>\n          <p className=\"home-title\">I'm <span className=\"home-title-name\">Th√©o Cerutti</span></p>\n          <p className=\"home-title\">A{ \" \" }\n            <TextLoop\n              className=\"home-title-text-loop\"\n              children={ suggestions }\n              springConfig={ { stiffness: 80, damping: 8 } }\n            />\n            { \" \" }Developer\n          </p>\n        </div>\n        <div style={ { paddingTop: \"3em\" } }>\n          <div className=\"align-home-button\">\n            <Link to=\"projects\">\n              <div className=\"home-button\">View My Projects</div>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <a href=\"https://github.com/theocerutti\">\n        <div className=\"fixed-bottom github-text\">\n          <i className=\"fab fa-github\"/>\n          <span className=\"ml-4\">Check my github!</span>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default HomePage;","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const searchDataSlice = createSlice({\n  name: \"searchData\",\n  initialState: {\n    data: [],\n    filteredData: []\n  },\n  reducers: {\n    getFilterMethod: (state, { payload }) => {\n      state.filterMethod = payload;\n    },\n    getData: (state, { payload }) => {\n      state.data = payload;\n      state.filteredData = payload;\n    },\n    search: (state, { payload }) => {\n      if (payload.length) {\n        state.filteredData = state.data.filter(data => {\n          return data.name.toLowerCase().includes(payload.toLowerCase());\n        });\n      } else {\n        state.filteredData = state.data;\n      }\n    }\n  },\n});\n\nexport const selectFilteredData = state => state.searchDataSlice.filteredData;\n\nexport const { getData, search } = searchDataSlice.actions;\n\nexport default searchDataSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Field from \"react-bulma-components/lib/components/form/components/field\";\nimport Control from \"react-bulma-components/lib/components/form/components/control\";\nimport Input from \"react-bulma-components/lib/components/form/components/input\";\nimport { search } from \"../../slices/searchDataSlice\";\n\nconst SearchBar = (props) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const onChange = (e) => {\n    const targetValue = e.target.value;\n    setValue(targetValue);\n    dispatch(search(targetValue));\n  };\n\n  return (\n    <Field className={ props.className }>\n      <Control>\n        <Input value={ value } placeholder=\"Search my project\" onChange={ e => onChange(e) }/>\n      </Control>\n    </Field>\n  );\n};\n\nexport default SearchBar;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const githubReposSlice = createSlice({\n  name: \"githubRepos\",\n  initialState: {\n    repos: [],\n    hasErrors: false,\n    errorMessage: \"\",\n    loading: true\n  },\n  reducers: {\n    getRepos: state => {\n      state.loading = true;\n      state.hasErrors = false;\n    },\n    getReposSucess: (state, { payload }) => {\n      state.repos = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getReposFailure: (state, { payload }) => {\n      state.loading = false;\n      state.hasErrors = true;\n      state.errorMessage = payload;\n    }\n  },\n});\n\nexport const { search, getRepos, getReposFailure, getReposSucess } = githubReposSlice.actions;\n\nexport const fetchRepos = createAsyncThunk(\n  \"repos/fetchMyRepos\",\n  (_, thunkAPI) => {\n    thunkAPI.dispatch(getRepos());\n\n    axios.get(\"https://api.github.com/users/theocerutti/repos\").then(res => {\n      console.log(res);\n      thunkAPI.dispatch(getReposSucess(res.data));\n    }).catch(err => {\n      thunkAPI.dispatch(getReposFailure(err));\n    });\n  }\n);\n\nexport const selectGithubReposValues = state => state.githubReposSlice;\n\nexport default githubReposSlice.reducer;\n","export const textCutter = (text, cutTextAfterNb, appendText = \"...\") => {\n  if (text.length > cutTextAfterNb) {\n    return text.slice(0, cutTextAfterNb) + appendText;\n  }\n  return text;\n}","import React from \"react\";\nimport Card from \"react-bulma-components/lib/components/card\";\nimport Content from \"react-bulma-components/lib/components/content\";\nimport Heading from \"react-bulma-components/lib/components/heading\";\nimport numeral from \"numeral\";\nimport { textCutter } from \"../../utils/parser\";\nimport moment from \"moment\";\n\nconst ProjectCard = ({ repo }) => {\n  const onStarProject = () => {\n    console.log(\"star \", repo.full_name);\n  };\n\n  return (\n    <span className=\"column is-one-third\">\n      <Card>\n        <Card.Content>\n          <div className=\"columns is-align-items-center\">\n            <span className=\"column is-2 has-text-centered hvr-icon-fade-star\">\n              <i onClick={ onStarProject } className=\"fas fa-star fa-lg hvr-icon is-clickable\"/>{ \" \" }\n              <p>{ numeral(repo.stargazers_count).format(\"0a\") }</p>\n            </span>\n            <span className=\"column\">\n              <Heading size={ 5 }>\n                <a className=\"repo-link\" href={ repo.html_url }>\n                  { repo.name }\n                </a>\n              </Heading>\n              <Heading subtitle size={ 6 }>\n                { textCutter(repo.description, 80) }\n              </Heading>\n            </span>\n          </div>\n          <Content className=\"is-align-items-flex-end\">\n            <span className=\"is-italic\">\n              Updated { moment(repo.updated_at, \"YYYYMMDD\").fromNow() }\n            </span>\n            <span className=\"is-pulled-right\">\n              <span className=\"mr-3\">\n                <i className=\"fas fa-exclamation-circle\"/> { repo.open_issues_count }\n              </span>\n              <span>\n                <i className=\"fas fa-code-branch\"/> { repo.forks_count }\n              </span>\n            </span>\n          </Content>\n        </Card.Content>\n      </Card>\n    </span>\n  );\n};\n\nexport default ProjectCard;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Hero from \"react-bulma-components/lib/components/hero\";\nimport Container from \"react-bulma-components/lib/components/container\";\nimport Loader from \"react-bulma-components/lib/components/loader\";\nimport Heading from \"react-bulma-components/lib/components/heading\";\nimport SearchBar from \"../../components/search-bar/SearchBar\";\nimport { fetchRepos, selectGithubReposValues } from \"../../slices/githubReposSlice\";\nimport { getData, selectFilteredData } from \"../../slices/searchDataSlice\";\nimport ProjectCard from \"./ProjectCard\";\nimport \"./Projects.scss\";\nimport Notification from \"react-bulma-components/lib/components/notification\";\n\nconst ProjectsPage = () => {\n  const dispatch = useDispatch();\n  const filteredData = useSelector(selectFilteredData);\n  const { loading, hasErrors, errorMessage, repos } = useSelector(selectGithubReposValues);\n\n  useEffect(() => {\n    dispatch(fetchRepos());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getData(repos));\n  }, [dispatch, repos]);\n\n  return (\n    <div>\n      { !hasErrors ? null :\n        <Notification style={ { padding: \"10px\" } } className=\"github-error-notification columns\" color=\"danger\">\n          <p className=\"column has-text-centered\">\n            Error with github API: { errorMessage.message || \"No Message\" }\n          </p>\n          <span className=\"is-clickable\">\n            <i className=\"fa fa-sync-alt column is-1\" onClick={ () => dispatch(fetchRepos()) }/>\n          </span>\n        </Notification>\n      }\n      <Hero className=\"is-medium project-hero\">\n        <Hero.Body>\n          <Container>\n            <Heading className=\"project-hero-body\">\n              My projects\n            </Heading>\n            <Heading subtitle size={ 3 }>\n              All projects I made\n            </Heading>\n            <SearchBar className=\"project-search-bar pt-3\"/>\n          </Container>\n        </Hero.Body>\n      </Hero>\n      <span>\n        {\n          hasErrors || loading ? <Loader className=\"loader\"/> :\n            filteredData !== undefined && filteredData.length === 0 ?\n              <Heading className=\"no-repo\">No repository!</Heading> :\n              filteredData !== undefined ?\n                <Container className=\"is-fluid p-6\">\n                  <div className=\"columns is-multiline\">\n                    { filteredData.map((data, key) => <ProjectCard key={ key } repo={ data }/>) }\n                  </div>\n                </Container>\n                : null\n        }\n      </span>\n    </div>\n  );\n};\n\nexport default ProjectsPage;","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport {\r\n  AboutPage,\r\n  HomePage,\r\n  ProjectsPage\r\n} from \"pages/pages\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/about\">\r\n          <AboutPage/>\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <ProjectsPage/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <HomePage/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport githubReposReducer from \"../slices/githubReposSlice\";\r\nimport searchDataReducer from \"../slices/searchDataSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    githubReposSlice: githubReposReducer,\r\n    searchDataSlice: searchDataReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}